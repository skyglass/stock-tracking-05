spring:
  application:
    name: e2e

  cloud:
    openfeign:
      client:
        config:
          default:
            readTimeout: 20000
            connectTimeout: 30000
          analytics:
            url: http://localhost:9000/analytics/api
          basket:
            url: http://localhost:9000/basket/api
          basket2:
            url: http://localhost:9000/basket2/api
          basket3:
            url: http://localhost:9000/basket3/api
          catalog-command:
            url: http://localhost:9000/catalog-command/api
          catalog-command2:
            url: http://localhost:9000/catalog-command2/api
          catalog-command3:
            url: http://localhost:9000/catalog-command3/api
          catalog-query:
            url: http://localhost:9000/catalog-query/api
          catalog-query2:
            url: http://localhost:9000/catalog-query2/api
          order-processing:
            url: http://localhost:9000/order-processing/api
          order-processing2:
            url: http://localhost:9000/order-processing2/api
          oauth2:
            url: http://localhost:8080
          kafka:
            url: http://localhost:8070/api/clusters/local

  data:
    axon:
      mongodb:
        uri: mongodb://${app.axon.mongodb.user}:${app.axon.mongodb.password}@${app.axon.mongodb.host}:${app.axon.mongodb.port}/${app.axon.mongodb.database}?authSource=admin
        database: ${app.axon.mongodb.database}

    basket:
      redis:
        password: ${app.basket.redis.password}
        host: ${app.basket.redis.host}
        port: ${app.basket.redis.port}

  jpa:
    hibernate:
      ddl-auto: none
  datasource:
    catalog-command:
      url: jdbc:postgresql://${app.catalog-command.postgres.host}:${app.catalog-command.postgres.port}/${app.catalog-command.postgres.database}
      username: ${app.catalog-command.postgres.user}
      password: ${app.catalog-command.postgres.password}
      driver-class-name: org.postgresql.Driver
      hikari:
        connection-timeout: 2000 #ms
        maximum-pool-size: 5
    catalog-query:
      url: jdbc:postgresql://${app.catalog-query.postgres.host}:${app.catalog-query.postgres.port}/${app.catalog-query.postgres.database}
      username: ${app.catalog-query.postgres.user}
      password: ${app.catalog-query.postgres.password}
      driver-class-name: org.postgresql.Driver
      hikari:
        connection-timeout: 2000 #ms
        maximum-pool-size: 5
    order-processing:
      url: jdbc:postgresql://${app.order-processing.postgres.host}:${app.order-processing.postgres.port}/${app.order-processing.postgres.database}
      username: ${app.order-processing.postgres.user}
      password: ${app.order-processing.postgres.password}
      driver-class-name: org.postgresql.Driver
      hikari:
        connection-timeout: 2000 #ms
        maximum-pool-size: 5

security:
  oauth2:
    client-id: stock-app
    grant-type: password
    username: admin
    password: admin

app:
  axon:
    mongodb:
      host: localhost
      port: 27017
      user: user
      password: pass
      database: axonframework

  basket:
    redis:
      host: localhost
      port: 6379
      password: pass

  catalog-command:
    postgres:
      host: localhost
      port: 5432
      database: stockorderdb
      user: stockorderdbuser
      password: dbpass

  catalog-query:
    postgres:
      host: localhost
      port: 5432
      database: catalogdb
      user: dbuser
      password: dbpass

  order-processing:
    postgres:
      host: localhost
      port: 5432
      database: orderdb
      user: orderdbuser
      password: dbpass


